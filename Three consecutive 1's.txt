#include <iostream>
#include <string>
using namespace std;

void state1(string s, int i);
void state2(string s, int i);
void state3(string s, int i);
void state4(string s, int i);
int count = 0;

void prints(string s)
{
    for (auto &i : s)
    {
        cout << i;
    }
    cout << endl;
}

bool checks(string s)
{
    for (int i = 0; i < s.length(); i++)
    {
        if (!(s[i] == '0' || s[i] == '1'))
        {
            cout << "'" << s[i] << "' is not a part of allowed symbols" << endl;
            cout << "String is Rejected" << endl;
            return false;
        }
    }
    return true;
}

void state1(string s, int i)
{
    cout << endl;
    cout << "In State 1 (Initial State)" << endl;
    if (s.length() != i)
    {
        prints(s);
        cout << "Element at position " << i + 1 << " i.e., '" << s[i] << "' is processed in State 1" << endl;
    }

    if (s.length() == i)
    {
        cout << "Our string ends in State 1 (No substring of three consecutive '1's is found), " << endl;
        cout << "String is Rejected" << endl;
        return;
    }
    else
    {
        if (s[i] == '0')
        {
            cout << "It is '0', so remain in State 1" << endl;
            state1(s, i + 1);
        }
        if (s[i] == '1')
        {
            cout << "It is '1', so transition to State 2" << endl;
            state2(s, i + 1);
        }
    }
}

void state2(string s, int i)
{
    cout << endl;
    cout << "In State 2" << endl;
    if (i != s.length())
    {
        prints(s);
        cout << "Element at position " << i + 1 << " i.e., '" << s[i] << "' is processed in State 2" << endl;
    }

    if (s.length() == i)
    {
        cout << "Our string ends in State 2, which means the substring '11' is incomplete." << endl;
        cout << "String is Rejected" << endl;
        return;
    }
    else
    {
        if (s[i] == '0')
        {
            cout << "It is '0', so transition back to State 1" << endl;
            state1(s, i + 1);
        }
        if (s[i] == '1')
        {
            cout << "It is '1', so transition to State 3" << endl;
            state3(s, i + 1);
        }
    }
}

void state3(string s, int i)
{
    cout << endl;
    cout << "In State 3 (Two consecutive '1's detected)" << endl;
    if (i != s.length())
    {
        prints(s);
        cout << "Element at position " << i + 1 << " i.e., '" << s[i] << "' is processed in State 3" << endl;
    }

    if (s.length() == i)
    {
        cout << "Our string ends in State 3, which means we found '11', but no third '1'." << endl;
        cout << "String is Rejected" << endl;
        return;
    }
    else
    {
        if (s[i] == '0')
        {
            cout << "It is '0', so transition back to State 1" << endl;
            state1(s, i + 1);
        }
        if (s[i] == '1')
        {
            cout << "It is '1', so transition to State 4 (Substring '111' found)" << endl;
            state4(s, i + 1);
        }
    }
}

void state4(string s, int i)
{
    cout << endl;
    cout << "In State 4" << endl;

    if (i != s.length())
    {
        prints(s);
        cout << "Element at position " << i + 1 << " i.e., '" << s[i] << "' is processed in State 4" << endl;
    }
    if (s.length() == i)
    {
        cout << "Our string ends in State 4, which is a final accepting state." << endl;
        cout << "String is Accepted!" << endl;
        return;
    }
    else
    {
        if (s[i] == '0')
        {
            cout << "It is '0', remain in State 4 (String is already accepted)." << endl;
            state4(s, i + 1);
        }
        else
        {
            cout << "It is '1', remain in State 4 (String is already accepted)." << endl;
            state4(s, i + 1);
        }
    }
}

int main(int argc, char const *argv[])
{
    cout << "Set of allowed symbols: {0, 1}" << endl;
    cout << "Finite Automaton (FA) that accepts all strings over {0, 1} having three consecutive '1's as a substring" << endl << endl;

    cout << "State Descriptions:\n\n";
    cout << "State 1 (Initial & Non-final): Initial state, remains on '0', moves to State 2 on '1'.\n";
    cout << "State 2 (Non-final): Moves to State 1 on '0', moves to State 3 on '1'.\n";
    cout << "State 3 (Non-final): Moves to State 1 on '0', moves to State 4 on '1' (Final State).\n";
    cout << "State 4 (Final): Stays in State 4 after '111' is detected, remains here regardless of input.\n\n";

    string s;
    cout << "Enter the string to check whether it is accepted by the FA or rejected: ";
    cin >> s;
    if (checks(s))
    {
        cout << "We will start with our initial state, State 1, and process the first character of the string. ";
        cout << "Then, we will process the remaining characters in their respective states based on the transitions.\n\n";
        state1(s, 0);
    }

    return 0;
}
